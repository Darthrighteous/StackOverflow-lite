// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Home component test snapshot test 1`] = `
<div
  className="main-content"
>
  <div
    className="content-header"
  >
    <h2>
      Questions
    </h2>
    <ButtonNewQuestion />
  </div>
  <div
    className="content-options"
  >
    <div
      className="dropdown"
      onClick={[Function]}
      onKeyDown={null}
      role="button"
      tabIndex="0"
    >
      <span
        className="dropdown-title"
      >
        Sort
      </span>
      <div
        className="dropdown-container"
      >
        <button
          className="drop-btn"
          type="button"
        >
          most recent
        </button>
        <svg
          className="drop-icon"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <path
              d="M14.1711599,9.3535 L9.99925636,13.529 L5.82735283,9.3535 C5.51262415,9.0385 5.73543207,8.5 6.18054835,8.5 L13.8179644,8.5 C14.2630807,8.5 14.4858886,9.0385 14.1711599,9.3535"
              fill="inherit"
            />
          </g>
        </svg>
      </div>
      <div />
    </div>
  </div>
  <QuestionSummary
    history={Object {}}
    isOwner={true}
    key="4"
    question={
      Object {
        "accepted_answer": null,
        "answer_count": 0,
        "answers": Array [
          Object {
            "body": null,
            "id": null,
          },
        ],
        "body": "What is the point of celebrating when we win? Is it cause we feel happy? is it cause we don't know how to act when we feel happy. I am coming from a place of winning all the time and I'm not sure what to do about this, I feel like I 'NEED' to celebrate. This doesn't feel normal to me. I don't want to celebrate because I want to, it feels more like society has programmed me to NEED to celebrate. Why can't I just go about my day normally?",
        "comment_count": 0,
        "created_at": "2018-12-26T08:26:53.488Z",
        "id": 4,
        "score": 0,
        "title": "Why do we celebrate when we win?",
        "username": "Darthrighteous",
      }
    }
  />
  <QuestionSummary
    history={Object {}}
    isOwner={true}
    key="2"
    question={
      Object {
        "accepted_answer": null,
        "answer_count": 1,
        "answers": Array [
          Object {
            "body": "Answer body two",
            "id": 2,
          },
        ],
        "body": "Question body two",
        "comment_count": 0,
        "created_at": "2018-12-24T15:35:56.347Z",
        "id": 2,
        "score": 1,
        "title": "Question 2",
        "username": "dddark",
      }
    }
  />
  <QuestionSummary
    history={Object {}}
    isOwner={true}
    key="3"
    question={
      Object {
        "accepted_answer": null,
        "answer_count": 0,
        "answers": Array [
          Object {
            "body": null,
            "id": null,
          },
        ],
        "body": "Question body three",
        "comment_count": 0,
        "created_at": "2018-12-24T15:35:56.347Z",
        "id": 3,
        "score": 0,
        "title": "Question 3",
        "username": "coachee",
      }
    }
  />
  <QuestionSummary
    history={Object {}}
    isOwner={true}
    key="1"
    question={
      Object {
        "accepted_answer": null,
        "answer_count": 3,
        "answers": Array [
          Object {
            "body": "Answer body three",
            "id": 3,
          },
          Object {
            "body": "Answer body four",
            "id": 4,
          },
          Object {
            "body": "Answer body one",
            "id": 1,
          },
        ],
        "body": "Question body one",
        "comment_count": 1,
        "created_at": "2018-12-24T15:35:56.347Z",
        "id": 1,
        "score": 0,
        "title": "Question 1",
        "username": "skerrigan",
      }
    }
  />
</div>
`;

exports[`Home component test snapshot test 2`] = `
<div
  className="main-content"
>
  <div
    className="content-header"
  >
    <h2>
      Questions
    </h2>
    <ButtonNewQuestion />
  </div>
  <div
    className="content-options"
  >
    <div
      className="dropdown"
      onClick={[Function]}
      onKeyDown={null}
      role="button"
      tabIndex="0"
    >
      <span
        className="dropdown-title"
      >
        Sort
      </span>
      <div
        className="dropdown-container"
      >
        <button
          className="drop-btn"
          type="button"
        >
          most recent
        </button>
        <svg
          className="drop-icon"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <path
              d="M14.1711599,9.3535 L9.99925636,13.529 L5.82735283,9.3535 C5.51262415,9.0385 5.73543207,8.5 6.18054835,8.5 L13.8179644,8.5 C14.2630807,8.5 14.4858886,9.0385 14.1711599,9.3535"
              fill="inherit"
            />
          </g>
        </svg>
      </div>
      <div />
    </div>
  </div>
  <div />
</div>
`;

exports[`Home component test snapshot test 3`] = `
<Home
  fetchQuestions={[Function]}
  history={Object {}}
  loginStatus={true}
  questions={Array []}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
  storeSubscription={
    Subscription {
      "listeners": Object {
        "clear": [Function],
        "get": [Function],
        "notify": [Function],
        "subscribe": [Function],
      },
      "onStateChange": [Function],
      "parentSub": undefined,
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "unsubscribe": [Function],
    }
  }
/>
`;
